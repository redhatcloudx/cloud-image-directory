[tool.poetry]
name = "rhelocator"
version = "0.1.0"
description = "Locate RHEL images in public clouds"
authors = [
    "Felix Kolwa <felix@redhat.com>",
    "Major Hayden <major@redhat.com>",
    "Nina Olear <nolear@redhat.com>"
]
maintainers = [
    "Felix Kolwa <felix@redhat.com>",
    "Major Hayden <major@redhat.com>",
    "Nina Olear <nolear@redhat.com>"
]
license = "Apache-2.0"
readme = "README.md"
packages = [
    {include = "rhelocator", from = "src"}
]
include = [
    { path = "tests", format = "sdist" }
]

[tool.poetry.dependencies]
python = "^3.9"
boto3 = "^1.24.86"
requests = "^2.28.1"
google-cloud-compute = "^1.6.0"
click = "^8.1.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
pytest-mock = "^3.9.0"
pytest-randomly = "^3.12.0"
pytest-xdist = {version = "^2.5.0", extras = ["psutil"]}
mypy = "^0.982"
pre-commit = "^2.20.0"
ipython = "^8.5.0"
flake8 = "^5.0.4"
pydocstyle = "^6.1.1"
yapf = "^0.32.0"
black = {version = "^22.8.0", allow-prereleases = true}
bandit = "^1.7.4"
pylint = "^2.15.3"
types-requests = "^2.28.11"
pytest-sugar = "^0.9.5"

[tool.poetry.scripts]
rhelocator-updater = "rhelocator.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Much of what is below this line is borrowed from poetry's pyproject.yaml.
# https://github.com/python-poetry/poetry/blob/master/pyproject.toml
[tool.isort]
py_version = 39
profile = "black"
force_single_line = true
combine_as_imports = true
lines_between_types = 1
lines_after_imports = 2
src_paths = ["src", "tests"]
extend_skip = ["setup.py"]

[tool.black]
target-version = ['py39']
preview = true
force-exclude = '''
.*/setup\.py$
'''


[tool.mypy]
files = "src"
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
show_error_codes = true
strict = true
ignore_missing_imports = true
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "truthy-bool",
]

[tool.pytest.ini_options]
addopts = "-n auto --cov=src/rhelocator --cov-report=term-missing --cov-report=xml --cov-branch"
testpaths = [
    "tests"
]


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:"
]

[tool.bandit.assert_used]
skips = ['*_test.py', '*/test_*.py']
